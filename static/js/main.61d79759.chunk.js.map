{"version":3,"sources":["components/Brew.js","components/Recent.js","App.js","index.js"],"names":["Brew","useState","roaster","origin","coffee","method","grinder","grindsize","minutes","seconds","coffeegrams","watergrams","descriptors","brewData","setBrewData","useEffect","localStorage","getItem","setItem","id","name","placeholder","onChange","event","target","value","required","disabled","selected","map","type","className","min","max","toFixed","newArray","includes","filter","adj","for","onClick","old","JSON","parse","alert","push","stringify","submit","Recent","brews","collapse","toggleCollapse","console","log","reverse","splice","length","brew","descriptor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d79759.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./css/Brew.css\";\r\n\r\nfunction Brew() {\r\n  // info for dropdowns\r\n  const origins = [\r\n    \"Other/blends\",\r\n    \"Bolivia\",\r\n    \"Brazil\",\r\n    \"Burundi\",\r\n    \"Cameroon\",\r\n    \"China\",\r\n    \"Colombia\",\r\n    \"Costa Rica\",\r\n    \"Cuba\",\r\n    \"Democratic Republic of the Congo\",\r\n    \"Dominican Republic\",\r\n    \"Eduador\",\r\n    \"El Salvador\",\r\n    \"Ethiopia\",\r\n    \"Guatemala\",\r\n    \"Haiti\",\r\n    \"Honduras\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Jamaica\",\r\n    \"Kenya\",\r\n    \"Mexico\",\r\n    \"Nicaragua\",\r\n    \"Panama\",\r\n    \"Papau New Guinea\",\r\n    \"Peru\",\r\n    \"Phillipines\",\r\n    \"Rwanada\",\r\n    \"Tanzania\",\r\n    \"Uganda\",\r\n    \"Venezuela\",\r\n    \"Vietnam\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n  ];\r\n  const methods = [\"Kalita\", \"V60\", \"Aeropress\", \"Automatic\", \"French Press\"];\r\n  //  state for submission & local storage\r\n  const [brewData, setBrewData] = useState({\r\n    roaster: \"\",\r\n    origin: \"\",\r\n    coffee: \"\",\r\n    method: \"\",\r\n    grinder: \"\",\r\n    grindsize: \"\",\r\n    minutes: \"0\",\r\n    seconds: \"\",\r\n    coffeegrams: \"\",\r\n    watergrams: \"\",\r\n    descriptors: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"brews\") === null) {\r\n      localStorage.setItem(\"brews\", \"[]\");\r\n    }\r\n  });\r\n\r\n  const submit = () => {\r\n    var old = JSON.parse(localStorage.getItem(\"brews\"));\r\n\r\n    if (brewData.roaster == \"\" || \r\n        brewData.origin == \"\" ||\r\n        brewData.coffee == \"\" ||\r\n        brewData.method == \"\" ||\r\n        brewData.grinder == \"\" ||\r\n        brewData.grindsize == \"\" ||\r\n        brewData.coffeegrams == \"\" ||\r\n        brewData.watergrams == \"\"\r\n        ) {\r\n          alert(\"please submit all data\")\r\n        } else {\r\n    old.push(brewData);\r\n    localStorage.setItem(\"brews\", JSON.stringify(old)); }\r\n  };\r\n\r\n  return (\r\n    <form id=\"main-box\">\r\n  \r\n      <div id=\"row1\">\r\n        <input\r\n          name=\"roaster\"\r\n          id=\"roaster\"\r\n          placeholder=\"roaster\"\r\n          onChange={(event) =>\r\n            setBrewData({ ...brewData, roaster: event.target.value })\r\n          }\r\n        />\r\n\r\n        <select\r\n          name=\"origin\"\r\n          id=\"origin\"\r\n          required\r\n          onChange={(event) =>\r\n            setBrewData({ ...brewData, origin: event.target.value })\r\n          }\r\n        >\r\n          {\" \"}\r\n          <option value=\"\" disabled selected>\r\n            select an origin\r\n          </option>\r\n          {origins.map((origin) => (\r\n            <option>{origin}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          name=\"coffee\"\r\n          id=\"coffee\"\r\n          placeholder=\"farm/variety/process/etc\"\r\n          required\r\n          onChange={(event) =>\r\n            setBrewData({ ...brewData, coffee: event.target.value })\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div id=\"row2\">\r\n        <div id=\"gear\">\r\n          <div>\r\n            <select\r\n              name=\"method\"\r\n              id=\"method\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, method: event.target.value })\r\n              }\r\n            ><option value=\"\" disabled selected>select a brew device</option>\r\n              {methods.map((method) => (\r\n                <option>{method}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <input\r\n              name=\"grinder\"\r\n              id=\"grinder\"\r\n              placeholder=\"grinder (ie 'baratza encore')\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, grinder: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              name=\"grindsize\"\r\n              id=\"grind-size\"\r\n              required\r\n              placeholder=\"grind size\"\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, grindsize: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"specs\">\r\n          <div className=\"time\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"minutes\"\r\n              id=\"minutes\"\r\n              min=\"0\"\r\n              max=\"60\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, minutes: event.target.value })\r\n              }\r\n            />\r\n            <span>minutes </span>\r\n            <input\r\n              type=\"number\"\r\n              name=\"seconds\"\r\n              id=\"seconds\"\r\n              min=\"0\"\r\n              max=\"60\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, seconds: event.target.value })\r\n              }\r\n            />\r\n            <span>seconds</span>\r\n          </div>\r\n\r\n          <div id=\"masses\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"coffeegrams\"\r\n              id=\"coffeegrams\"\r\n              min=\"0\"\r\n              max=\"2000\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, coffeegrams: event.target.value })\r\n              }\r\n            />\r\n            <span>grams coffee </span>\r\n\r\n            <input\r\n              type=\"number\"\r\n              name=\"watergrams\"\r\n              id=\"watergrams\"\r\n              min=\"0\"\r\n              max=\"9999\"\r\n              required\r\n              onChange={(event) =>\r\n                setBrewData({ ...brewData, watergrams: event.target.value })\r\n              }\r\n            />\r\n            <span>grams water</span>\r\n          </div>\r\n          {brewData.watergrams > 0 && brewData.coffeegrams > 0 ? <div>1:{(brewData.watergrams / brewData.coffeegrams).toFixed(1)} ratio</div> : null }\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"row3\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"astringent\"\r\n          name=\"astringent\"\r\n          value=\"astringent\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"astringent\"> astringent</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"muted\"\r\n          name=\"muted\"\r\n          value=\"muted\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"astringent\"> muted</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"sour\"\r\n          name=\"sour\"\r\n          value=\"sour\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"sour\"> sour</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"dry\"\r\n          name=\"dry\"\r\n          value=\"dry\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"dry\"> dry</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"harsh\"\r\n          name=\"harsh\"\r\n          value=\"harsh\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"harsh\"> harsh</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"watery\"\r\n          name=\"watery\"\r\n          value=\"watery\"\r\n          onChange={(event) => {\r\n            let newArray = [...brewData.descriptors, event.target.value];\r\n            if (brewData.descriptors.includes(event.target.id)) {\r\n              newArray = newArray.filter((adj) => adj !== event.target.value);\r\n            }\r\n            setBrewData({ ...brewData, descriptors: newArray });\r\n          }}\r\n        />\r\n        <label for=\"watery\"> watery</label>\r\n      </div>\r\n\r\n      <div id=\"submit\">\r\n        <input type=\"submit\" onClick={() => submit()} />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Brew;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport \"./css/Recent.css\";\r\n\r\nfunction Recent() {\r\n  const brews = JSON.parse(localStorage.getItem(\"brews\"));\r\n  const [collapse, toggleCollapse] = useState(true)\r\n  \r\n  return (\r\n    <div id=\"results-box\" onClick={() => {\r\n        toggleCollapse(collapse ? false : true)\r\n        console.log(\"collapse: \", collapse)}}>\r\n      {brews.reverse().splice(0,\r\n          collapse ? 1 : brews.length\r\n      ).map((brew) => (\r\n        <div className=\"brew-container\">\r\n          <div className=\"beans-info\">\r\n            <span>{brew.roaster}</span>\r\n            <span>{brew.origin}</span>\r\n            <span>{brew.coffee}</span>\r\n          </div>\r\n\r\n          <div className=\"grind-info\">\r\n            <span>{brew.method}</span>\r\n            <span>{brew.grinder}</span>\r\n            <span>grind size: {brew.grindsize}</span>\r\n          </div>\r\n\r\n          <div className=\"brew-info\">\r\n            <span>\r\n              {brew.coffeegrams}g coffee, {brew.watergrams}g water (1:\r\n              {(brew.watergrams / brew.coffeegrams).toFixed(0)})\r\n            </span>\r\n            <span>\r\n              {brew.minutes > 1\r\n                ? brew.minutes + \" minutes \"\r\n                : brew.minutes + \" minute \"}\r\n                \r\n            {brew.seconds}s\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"flavor-info\">\r\n              {brew.descriptors.map((descriptor) => (\r\n                  <div>{descriptor}</div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recent;\r\n","import './App.css';\nimport Brew from './components/Brew'\nimport Recent from './components/Recent'\n\nfunction App() {\n  return (\n<div>\n<Brew />\n{localStorage.getItem(\"brews\") !== null ? <Recent /> : null}\n</div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}